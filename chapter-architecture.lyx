#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Architecture
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
Solution architecture - this should not leave any mysteries about the solution,
 this is the 
\begin_inset Quotes eld
\end_inset

specification
\begin_inset Quotes erd
\end_inset

 of the expert, this is the 
\begin_inset Quotes eld
\end_inset

HOW
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
nature (webapplication)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Enumerate
Monitoring and aggregation (snapshot of system)
\end_layout

\begin_layout Enumerate
finding optimal recovery suggestion, &&dataflow & Processing & analysis
 (how the snapshot are processed)
\end_layout

\begin_layout Enumerate
delivery to Control Room
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
dashboard for shifters for better operations
\end_layout

\begin_layout Enumerate
browser and archive view for expert for post-mortem
\end_layout

\begin_layout Enumerate
reports
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
The system has been organized in micro-service architecture.
 Three services has been distinguished to implement use cases described
 in first chapter.
 Firstly there is a service that aggregates all monitoring information into
 one snapshot and persists it - Snapshot Service.
 Secondly there is a service that applies the knowledge of the experts on
 the snapshots - Reasoning Service.
 Finally there is a service that manages and delivers notifications, including
 sms, e-mail and live suggestions and sound notifications in control room.
 The DAQExpert brings all parts together in a form of web application allowing
 to browse whole history of monitoring data, to view the analysis, to control
 the snapshotting of a system and to manage notifications.
 The architecture has been presented on the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architecture"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/architecture.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Architecture"

\end_inset

Architecture
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Monitoring and aggregation
\end_layout

\begin_layout Standard
There are multiple sources of monitoring information enabling access either
 offline or online.
 The information varies in frequency of updates and type of API available
 to access it.
 To enable reasoning in a real time the easy access to any information needs
 to be assured.
 The first step was to aggregate the information into so-called snapshots.
 Snapshot is a representation of the instantaneous state of the system.
 The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DAQ-system-model"

\end_inset

 presents the model of the snapshot.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/snapshot.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:DAQ-system-model"

\end_inset

DAQ system model used for creating snapshots
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The snapshot brings both structural information of the system, i.e.
 from which elements the current configuration consists of and instantaneous
 state of this elements.
 There might be multiple BU (Builder Unit) elements in DAQ configuration
 and this will be represented accordingly in the number of objects of the
 class BU in the snapshot.
 Each BU element will have it's own instantaneous state which will be represente
d with fields of object BU.
 There are also other elements like, RU, FED, Subsystem etc.
 The snapshot brings all the elements and their instantaneous state to one
 place.
 The scope of the snapshot has been designed so that there are all information
 needed to perform post-mortem analysis and recreate the system state.
\end_layout

\begin_layout Subsection
Data-flow
\end_layout

\begin_layout Standard
There are multiple steps before information from data sources is available
 to the clients.
 The data-flow is presented on the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Dataflow-from-external"

\end_inset

.
 First the monitoring data sources are queried to get instantaneous state
 of the DAQ system.
 The information retrieved from multiple sources is aggregated and mapped
 to the model - the snapshot of the system.
 While the snapshot is persisted for possible later post-mortem analysis
 it is simultaneously sent to ReasoningService for analysis.
 As a result of analysis the notifications may be yielded that will be later
 dispatched by the NotificationService and delivered to the clients.
 On the way all of the services persist their results enabling to browse
 historic data.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/data-flow.png
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Dataflow-from-external"

\end_inset

Dataflow from data sources to the clients.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tools
\end_layout

\begin_layout Paragraph
Dashboard
\end_layout

\begin_layout Standard
There are four main tools delivered by the DAQExpert.
 First is the dashboard - the tool used in control room to deliver suggestion
 in a real-time.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Dashboard-snapshot"

\end_inset

 presents snapshot of a dashboard while the system was in the problematic
 state.
 This is what the CMS operator sees when DAQ encounters a problem - in this
 case 
\begin_inset Quotes eld
\end_inset

out of sequence data received
\begin_inset Quotes erd
\end_inset

.
 The main section (grayed-out background) is the section of current problem.
 The detailed description of the problem is provided:
\end_layout

\begin_layout Verse
Run blocked by out-of-sync data from FED 1386 received by RU ru-c2e12-40-01.cms
 - now it syncloss state.
 Problem FED belongs to partition MUTFUP in TRG subsystem.
 This causes back-pressure at FED 1380 in partition MUTFUP of TRG.
\end_layout

\begin_layout Standard
The description always consists of a problem source, in this case FED 1386
 belonging to trigger subsystem, and affected elements, in this case FED
 1380 in the same subsystem.
 Apart from that the recovery suggestion is proposed:
\end_layout

\begin_layout Enumerate
Try to recover (try up to 2 times)
\end_layout

\begin_layout Enumerate
Stop the run.
 Red & green recycle the subsystem.
 Start a new Run.
\end_layout

\begin_layout Enumerate
Problem not fixed: Call the DOC of TRG (subsystem that caused the SyncLoss)
\end_layout

\begin_layout Enumerate
Problem fixed: Make an e-log entry.
 Call the DOC TRG (subsystem that caused the syncLoss) to inform about the
 problem.
\end_layout

\begin_layout Standard
The recovery instructions include predefined by subsystem experts which
 they would ideally do if they were operators.
\end_layout

\begin_layout Standard
The bottom section, 
\begin_inset Quotes eld
\end_inset

recent suggestions
\begin_inset Quotes erd
\end_inset

 provide last suggestions enabling the operator to review it after the problem
 has been resolved.
 The right section, 
\begin_inset Quotes eld
\end_inset

all events
\begin_inset Quotes erd
\end_inset

, as the name suggests, shows all events flowing inside the system.
 It might include expert generated notifications, e.g.
 subsystem sending the alarm and analysis results originating from expert.
\end_layout

\begin_layout Standard
The dashboard tool adopts web-sockets to ensure minimum latency of delivering
 the results and enable quicker reaction time of the operator.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/tool-dashboard.jpg
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Dashboard-snapshot"

\end_inset

Dashboard snapshot
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Browser 
\end_layout

\begin_layout Standard
Second tool - the browser - enables easy post-mortem analysis.
 
\end_layout

\begin_layout Standard
There were two main challenges implementing this tool.
 There was a timeline of events to display.
 Each event had a start date and end date.
 There was not a lot of entries in db - several hundred thousand although
 many columns had to be retrieved on each request.
 The data was requested based on timespan.
 The client could request the data for the timespan from few seconds to
 few months.
 Some entries were short, O(1sec), other long O(1month).
 Obviously short events were not really relevant in long-timespan requests
 (You could hardly see event lasting 1 sec browsing few months of data).
 Steps to resolve poor performance:
\end_layout

\begin_layout Enumerate
denormalize table by introducing redundant column duration (calculating
 duration from start and end column)
\end_layout

\begin_layout Enumerate
modify the initial query efficiently filtering on new column duration with
 a dynamic threshold based on timespan of requests (short events would be
 filtered)
\end_layout

\begin_layout Enumerate
introduce additional query counting events filtered based on the same threshold
 as the main query
\end_layout

\begin_layout Enumerate
combine both queries in the application persistence layer
\end_layout

\begin_layout Enumerate
alter presentation layer to handle and appropriately visualize filtered
 data Introduced changes included both structural and querying improvements.
 
\end_layout

\begin_layout Standard
Second case.
 There was a time-series of data stored in db (several tens of millions
 of rows).
 Again the data could be viewed in various timespan (from few seconds to
 few months).
 Showing all data for long time ranges resulted in heavy load and performance
 problems of visualization layer.
 Sampling data on the fly was not an option due to domain specific requirements.
 Changes I introduced:
\end_layout

\begin_layout Enumerate
data was segmented to multiple resolutions (original, minute, hour, day)
 using linear segmentation algorithm (solved sampling problem) 
\end_layout

\begin_layout Enumerate
additional column resolution introduced in the table - enabling filtering
 based on resolution requested 
\end_layout

\begin_layout Enumerate
based on timespan requested the resolution was dynamically selected and
 the down-sizing the response sizes and overall performance
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/tool-browser.png
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Browser tool interface
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Archive
\end_layout

\begin_layout Standard
This tools enables access to the historic notifications generated by Notificatio
nService.
 The client may filter the data by date, notification type and condition
 type.
 Figure x presents snapshot of the achieve tool.
 There were no challenges related to this tool.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/tool-archive.png
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Archive tool interface
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Reports
\end_layout

\begin_layout Standard
Tool delivered to access statistical data.
 Based on selected timeframe the report will be generated.
 It includes efficiency chart, ...
 histogram...
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/tool-reports.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Report tool interface
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Configuration
\end_layout

\begin_layout Standard
Tool for defining preferences on when, how and which notifications one wants
 to receive.
\end_layout

\end_body
\end_document
